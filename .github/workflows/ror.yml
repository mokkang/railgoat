name: Example install of Ruby 2.6.5 (cached)

on: push

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
    - uses: actions/cache@preview
      id: cache
      with:
        path: ~/local/rubies
        key: ruby-2.6.5
    - uses: clupprich/ruby-build-action@master
      id: ruby
      with:
        ruby-version: 2.6.5
        cache-available: ${{ steps.cache.outputs.cache-hit == 'true' }}
    - name: Print version
      run: ${{ steps.ruby.outputs.ruby-path }} --version
    - name: Set up Node
      uses: actions/setup-node@v1
      with:
        node-version: 10.13.0
    - name: Install dependencies
      run: |
          gem install bundler -v '1.17.3'
          gem install veracode
          bundle install
          bundle exec veracode prepare
          mv tmp/** ${{ github.repository }}/
          ls -lhart tmp/ 
          pwd
          ls -lhart ${{ github.repository }} 
          pwd
          ls -lhart ~
          pwd
          yarn install
          
    - name: Veracode Upload And Scan
      # You may pin to the exact commit or the version.
      # uses: veracode/veracode-uploadandscan-action@35794dab9fbcd28fac19e44963f80646b27f4a7f
      uses: veracode/veracode-uploadandscan-action@0.2.4
      with:
        # appname
          appname: ror-github # default is ${{ github.repository }}
          # createprofile
          createprofile: true # default is true
          # filepath
          filepath: ${{ github.repository }}/tmp/veracode*.zip
          # version
          version: ${{ github.run_id }}-${{ github.run_number }} # default is Scan from Github job: ${{ github.run_id }}-${{ github.run_number }}-${{ github.run_attempt }}
          # vid
          vid: ${{secrets.VERACODE_API_ID}} 
          # vkey
          vkey: ${{secrets.VERACODE_API_KEY}} 
          # true or false
          createsandbox: true # optional
          # name of the sandbox
          sandboxname: main # optional
          # wait X minutes for the scan to complete
#          scantimeout: # optional
          # modules to exclude from module selection
 #         exclude: # optional
          # modules to include in module selection
 #         include: # optional
          # business criticality - policy selection
 #         criticality: # optional
          # filename pattern
 #         pattern: # optional
          # replacement
#          replacement: # optional
          # specify to scan in a sandbox
#          sandboxid: # optional
          # All top level modules
#          scanallnonfataltoplevelmodules: # optional
          # platform selected modules
#          selected: # optional
          # selected modules like from previous scan#
#          selectedpreviously: # optional
          # teams
#          teams: # optional
          # teams
#          toplevel: # optional
          # automatically delete the current scan if there are any errors when uploading files or starting the scan
#          deleteincompletescan: # optional
          # specify version of the Java API Wrapper; default is latest
#          javawrapperversion: # optional
          # show detailed diagnostic information, which you can use for debugging, in the output.
#          debug: # optional
    - name: Setup test database
      
      env:
        RAILS_ENV: test
        PGHOST: localhost
        POSTGRES_DB: rails_github_actions_test
        POSTGRES_USER: rails_github_actions
        POSTGRES_PASSWORD: postgres
      run: |
        cp config/database.ci.yml config/database.yml
        rake db:create db:migrate

    - name: Run tests
      env:
        PGHOST: localhost
        POSTGRES_DB: rails_github_actions_test
        POSTGRES_USER: rails_github_actions
        POSTGRES_PASSWORD: postgres
        PGPORT: ${{ job.services.postgres.ports[5432] }}
        RAILS_ENV: test
      run: rspec
